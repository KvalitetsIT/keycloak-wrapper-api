openapi: 3.0.0
info:
  title: Kithugs
  description: API description for KITHUGS.
  version: "1.0.0"
  contact:
    email: development@kvalitetitsit.dk
tags:
  - name: User
    description: KITHUGS related API's

servers:
  - url: 'http://localhost:8080'
    variables:
      protocol:
        enum:
          - http
          - https
        default: http
      environment:
        enum:
          - localhost # Docker-compose setup
        default: localhost # Development
      port:
        enum:
          - 8080
        default: 8080

paths:
  /v1/users:
    get:
      tags:
        - User
      parameters:
        - $ref: '#/components/parameters/page'
        - $ref: '#/components/parameters/limit'
      summary: Get all users
      description: Gets all users
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponse'
    post:
      tags:
        - User
      summary: Create a user
      description: Create a user
      requestBody:
        description: The new user to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUserRequest'
      responses:
        '200':
          description: Ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/createUserResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/basicError'
  


components:
  parameters:
    page:
      name: page
      in: query
      schema:
        type: integer
      description: The "page" to get items for. This will skip the first (page-1)*limit items.
    limit:
      name: limit
      in: query
      schema:
        type: integer
      description: The maximum number of items to be retrieved. This is also the page size when using the 'page' parameter.

  responses:
    '400':
      description: "Bad Request. This could be because: * One of the required parameters/properties are missing or is empty <br> * Length of input is exceeding maximum length <br> (See a possible detailed error message in the in the response.)"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/detailedError'
    '401':
      description: "Unauthorized. This could be because: <br> * The calling system has not been properly authenticated."
    '403':
      description: "Forbidden. This could be because: <br> * The requested information does not belong the organisation of the user <br> * The calling user does not have the required roles"

  schemas:
    UserResponse:
      type: object
      required:
        - username
      properties:
        username:
          description: Your name
          type: string
          example: "John Doe"
      
      additionalProperties: false

    getUsersUserResponse:
      allOf:
        - type: array
          items:
            $ref: '#/components/schemas/UserResponse'

    createUserResponse:
      allOf:
        - $ref: '#/components/schemas/UserResponse'
  
    createUserRequest:
       allOf:
        - $ref: '#/components/schemas/UserResponse'
          

    detailedError:
      allOf:
        - $ref: '#/components/schemas/basicError'
        - type: object
          required:
            - detailed_error
            - detailed_error_code
          properties:
            detailed_error:
              description: Detailed error text. This could be a text describing an validation error.
              type: string
            detailed_error_code:
              description:
              type: string
              enum:
                - 10
                - 20

    basicError:
      type: object
      required:
        - timestamp
        - status
        - error
        - path
      properties:
        error:
          description: Error message.
          type: string
        path:
          description: Path
          type: string
        status:
          description: HTTP status code
          type: integer
        timestamp:
          description: Time of error
          type: string
          format: date-time